<?xml version="1.0" encoding="UTF-8"?>
<!-- ###license-information-start### E-PIX - Enterprise Identifier Cross-Referencing __ Copyright (C) 2009 - 2020 The MOSAIC Project - Institut fuer Community 
	Medicine der Universitaetsmedizin Greifswald - mosaic-projekt@uni-greifswald.de concept and implementation c. schack, l. geidel, d. langner, g. koetzschke 
	web client a. blumentritt please cite our publications http://dx.doi.org/10.3414/ME14-01-0133 http://dx.doi.org/10.1186/s12967-015-0545-6 __ This program 
	is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, 
	either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY 
	WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. 
	You should have received a copy of the GNU Affero General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. ###license-information-end### -->

<ma:MatchingConfiguration xmlns:ma="http://www.ttp.icmvc.emau.org/deduplication/config/model"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.ttp.icmvc.emau.org/deduplication/config/model matching-config-2.9.0.xsd ">
	<matching-mode>MATCHING_IDENTITIES</matching-mode>
	<mpi-generator>org.emau.icmvc.ttp.epix.gen.impl.EAN13Generator</mpi-generator>
	<mpi-prefix>1001</mpi-prefix>
	<use-notifications>false</use-notifications>
	<persist-mode>IDENTIFYING</persist-mode>

	<required-fields>
		<name>firstName</name>
		<name>lastName</name>
		<name>gender</name>
		<name>nationality</name>
		<name>value1</name>
		<name>value3</name>
		<name>value4</name>
	</required-fields>
	<value-fields-mapping>
		<value1>year of birth</value1>
		<value3>street</value3>
		<value4>zip code</value4>
	</value-fields-mapping>
	<preprocessing-config>
		<preprocessing-field>
			<field-name>firstName</field-name>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>
				</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>-</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<complex-transformation-type xsi:type="ma:ComplexTransformation">
				<qualified-class-name>org.emau.icmvc.ttp.deduplication.preprocessing.impl.ToUpperCaseTransformation</qualified-class-name>
			</complex-transformation-type>
			<complex-transformation-type xsi:type="ma:ComplexTransformation">
				<qualified-class-name>org.emau.icmvc.ttp.deduplication.preprocessing.impl.CharsMutationTransformation</qualified-class-name>
			</complex-transformation-type>
		</preprocessing-field>
		<preprocessing-field>
			<field-name>lastName</field-name>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Dr.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Prof.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>med.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>rer.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>nat.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Ing.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Dipl.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>,</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>
				</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>-</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<complex-transformation-type xsi:type="ma:ComplexTransformation">
				<qualified-class-name>org.emau.icmvc.ttp.deduplication.preprocessing.impl.ToUpperCaseTransformation</qualified-class-name>
			</complex-transformation-type>
			<complex-transformation-type xsi:type="ma:ComplexTransformation">
				<qualified-class-name>org.emau.icmvc.ttp.deduplication.preprocessing.impl.CharsMutationTransformation</qualified-class-name>
			</complex-transformation-type>
		</preprocessing-field>
		<preprocessing-field>
			<field-name>value3</field-name>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>
				</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>-</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>STRASSE</input-pattern>
				<output-pattern>STR</output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>STRASE</input-pattern>
				<output-pattern>STR</output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>STR </input-pattern>
				<output-pattern>STR</output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>STR.</input-pattern>
				<output-pattern>STR</output-pattern>
			</simple-transformation-type>
			<complex-transformation-type xsi:type="ma:ComplexTransformation">
				<qualified-class-name>org.emau.icmvc.ttp.deduplication.preprocessing.impl.ToUpperCaseTransformation</qualified-class-name>
			</complex-transformation-type>
			<complex-transformation-type xsi:type="ma:ComplexTransformation">
				<qualified-class-name>org.emau.icmvc.ttp.deduplication.preprocessing.impl.CharsMutationTransformation</qualified-class-name>
			</complex-transformation-type>
		</preprocessing-field>
		<preprocessing-field>
			<field-name>value4</field-name>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>
				</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
		</preprocessing-field>
	</preprocessing-config>
	<matching>
		<threshold-possible-match>2.99</threshold-possible-match>
		<threshold-automatic-match>14.5</threshold-automatic-match>
		<use-cemfim>false</use-cemfim>
		<field>
			<name>firstName</name>
			<blocking-threshold>0.4</blocking-threshold>
			<matching-threshold>1</matching-threshold>
			<weight>8</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
		<field>
			<name>lastName</name>
			<matching-threshold>1</matching-threshold>
			<weight>6</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
		<field>
			<name>gender</name>
			<matching-threshold>1</matching-threshold>
			<weight>3</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
		<field>
			<name>nationality</name>
			<matching-threshold>1</matching-threshold>
			<weight>4</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
		<field>
			<!-- year of birth -->
			<name>value1</name>
			<blocking-threshold>0.4</blocking-threshold>
			<blocking-mode>NUMBERS</blocking-mode>
			<matching-threshold>1</matching-threshold>
			<weight>8</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
		<field>
			<!-- Street -->
			<name>value3</name>
			<matching-threshold>1</matching-threshold>
			<weight>6</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
		<field>
			<!-- zipCode -->
			<name>value4</name>
			<matching-threshold>1</matching-threshold>
			<weight>5</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
	</matching>
</ma:MatchingConfiguration>
