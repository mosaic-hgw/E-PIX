<!--
  ###license-information-start###
  E-PIX - Enterprise Patient Identifier Cross-referencing
  __
  Copyright (C) 2009 - 2022 Trusted Third Party of the University Medicine Greifswald
  							kontakt-ths@uni-greifswald.de
  
  							concept and implementation
  							l.geidel,c.schack, d.langner, g.koetzschke
  
  							web client
  							a.blumentritt, f.m. moser
  
  							docker
  							r.schuldt
  
  							privacy preserving record linkage (PPRL)
  							c.hampf
  
  							please cite our publications
  							http://dx.doi.org/10.3414/ME14-01-0133
  							http://dx.doi.org/10.1186/s12967-015-0545-6
  							https://translational-medicine.biomedcentral.com/articles/10.1186/s12967-020-02257-4
  __
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  ###license-information-end###
  -->

<!-- author: Arne Blumentritt -->

<html xmlns="http://www.w3.org/1999/xhtml"
	  xmlns:c="http://java.sun.com/jsp/jstl/core"
	  xmlns:components="http://java.sun.com/jsf/composite/components"
	  xmlns:f="http://java.sun.com/jsf/core"
	  xmlns:h="http://java.sun.com/jsf/html" xmlns:p="http://primefaces.org/ui" xmlns:ui="http://java.sun.com/jsf/facelets">
<h:body>
	<ui:composition template="/resources/templates/epix.xhtml">

		<ui:define name="css">
		</ui:define>

		<ui:define name="js">
			<h:outputScript>
				$(document).ready(function ()
				{
					rowExpansion('matches');
					updateRowCount();
				});

				function rowExpansion(dataTableWidgetVar)
				{
					// dataTable should be the widgetVar object
					var $this = PF(dataTableWidgetVar);

					// turn off row toggler events
					var togglerSelector = '> tr > td > div.ui-row-toggler';
					$this.tbody.off('click.datatable-expansion', togglerSelector);

					// add the 'hand' when hovering on row
					// $this.tbody.children('tr').css('cursor', 'pointer');

					// now set the toggle to be the whole row
					togglerSelector = '> tr.ui-datatable-selectable';

					$this.tbody
					.off('click.datatable-expansion', togglerSelector)
					.on('click.datatable-expansion',
							togglerSelector,
							null,
							function ()
							{
								// toggle the current row
								$this.toggleExpansion($(this).find('div.ui-row-toggler'));
							});
				}
			</h:outputScript>
		</ui:define>

		<ui:define name="header_title">
			<h:outputText value="#{msg['resolve.titleHeader']}" />
		</ui:define>

		<ui:define name="title">
			<h:outputText value="#{msg['resolve.title']}" />
		</ui:define>

		<ui:define name="help">
			<h:outputText escape="false" value="#{msg['resolve.help']}" />
		</ui:define>

		<ui:define name="content">
			<h:form id="mainDisabled" rendered="#{domainSelector.selectedDomain.matchingMode.name() == 'NO_DECISION'}">
				<p:panel>
					<h4>
						<h:outputText value="#{msg['resolve.label.pageDisabledTitle']}" />
					</h4>
					<h:outputText value="#{msg['resolve.label.pageDisabled']}" />
				</p:panel>
			</h:form>
			<h:form id="main" onkeypress="if (event.keyCode === 13) { return false; }"
					rendered="#{domainSelector.selectedDomain.matchingMode.name() == 'MATCHING_IDENTITIES'}">
				<p:panel id="matches_panel" style="max-width: 1350px;">
					<h4 style="max-width: 60%;">
						<h:outputFormat id="rowCount" value="#{msg['resolve.label.possibleMatchesList']}">
							<f:param value="#{resolveController.possibleMatchDTOLazyModel.rowCount}" />
						</h:outputFormat>
					</h4>

					<p:blockUI block="matches" widgetVar="blockMatches" animate="false">
						<h:outputFormat escape="false" value="#{msg['resolve.label.filteringEntries']}" />
					</p:blockUI>

					<!--
					In PF11 you must use an explicit 'lazy' tag when the 'value' tag can be null or does not exist at all,
					otherwise the framework tries to derive the lazy mode from the 'value' tag which points to null.
					-->
					<p:dataTable lazy="false" styleClass="no-table no-border no-background ui-sm-0">
						<p:column styleClass="spacer" style="min-width: 196px;" />
						<p:column colspan="3" headerText="Person 1" width="48%" styleClass="left" />
						<p:column styleClass="spacer s" />
						<p:column colspan="3" headerText="Person 2" width="52%" styleClass="left" />
					</p:dataTable>

					<p:remoteCommand name="updateRowCount" update="@form:rowCount" />

					<p:dataTable id="matches" lazy="true"
								 currentPageReportTemplate="#{props.currentPageReport}"
								 emptyMessage="#{msg['resolve.label.possibleMatchesEmpty']}"
								 pageLinks="3" paginator="true" paginatorPosition="bottom" paginatorTemplate="#{props.paginatorTemplate}"
								 reflow="true" rowExpandMode="single"
								 rowKey="#{_match.linkId}" rows="5" rowsPerPageTemplate="5,10,20" rowsPerPageLabel="#{cmsg['ui.table.pageSize']}"
								 selection="#{resolveController.selectedPossibleMatch}" selectionMode="single"
								 styleClass="possible-matches"
								 value="#{resolveController.possibleMatchDTOLazyModel}"
								 var="_match" widgetVar="matches">
						<p:ajax event="filter" oncomplete="unBlockDataTable('blockMatches'); updateRowCount();" onstart="blockDataTable('blockMatches');" delay="700" />
						<p:ajax event="sort" oncomplete="unBlockDataTable('blockMatches');" onstart="blockDataTable('blockMatches');" />

						<f:facet name="header" style="text-align:left; padding: 0;">
							<p:inputText id="globalFilter" oninput="PF('matches').filter()" placeholder="#{cmsg['ui.table.filter']}" />
						</f:facet>

						<p:column headerText="#{msg['resolve.label.creationDate']}" style="min-width: 178px;" styleClass="no-identity">
							<h:outputText value="#{_match.possibleMatchCreated}" converter="datetime" />
						</p:column>
						<p:column style="display: none;">
							<p:rowToggler />
						</p:column>
						<p:column styleClass="spacer s" />

						<p:column headerText="#{msg['common.person.firstName']}" width="24%" style="min-width: 80px;" styleClass="left">
							<h:outputText value="#{_match.matchingMPIIdentities.toArray()[0].identity.firstName}" />
						</p:column>
						<p:column headerText="#{msg['common.person.lastName']}" width="24%" style="min-width: 80px;" styleClass="left">
							<h:outputText value="#{_match.matchingMPIIdentities.toArray()[0].identity.lastName}" />
						</p:column>
						<p:column headerText="#{msg['common.person.birthDate']}" style="min-width: 80px;" styleClass="left">
							<h:outputText value="#{_match.matchingMPIIdentities.toArray()[0].identity.birthDate}" converter="date" />
						</p:column>
						<p:column styleClass="spacer s" />

						<p:column headerText="#{msg['common.person.firstName']}" width="26%" style="min-width: 80px;" styleClass="right">
							<h:outputText value="#{_match.matchingMPIIdentities.toArray()[1].identity.firstName}" />
						</p:column>
						<p:column headerText="#{msg['common.person.lastName']}" width="26%" style="min-width: 80px;" styleClass="right">
							<h:outputText value="#{_match.matchingMPIIdentities.toArray()[1].identity.lastName}" />
						</p:column>
						<p:column headerText="#{msg['common.person.birthDate']}" style="min-width: 80px;" styleClass="right">
							<h:outputText value="#{_match.matchingMPIIdentities.toArray()[1].identity.birthDate}" converter="date" />
						</p:column>

						<p:rowExpansion>
							<h:panelGroup layout="block" styleClass="expansion">
								<div class="ui-g" style="margin:0">
									<div class="ui-g-12 ui-md-4 ui-lg-2 label" style="font-weight: bold; position: relative; top: 7px;">#{msg['resolve.action']}</div>
									<div class="ui-g-12 ui-md-8 ui-lg-10 left" style="text-align: center; margin-left: -9px;">
										<p:commandButton value="#{msg['resolve.button.keep']} 1"
														 actionListener="#{resolveController.setAssignTargetId(_match.matchingMPIIdentities.toArray()[0].identity.identityId, 1)}"
														 update=":reason_dialog" process="@this"
														 oncomplete="PF('reason_dialog').show();" icon="mdi mdi-call-merge flip-h" />
										<p:commandButton actionListener="#{resolveController.setAction('SPLIT')}"
														 icon="mdi mdi-call-split"
														 oncomplete="PF('reason_dialog').show();" process="@this"
														 styleClass="darkgrey" update="reason_dialog"
														 value="#{msg['resolve.button.split']}" />
										<p:commandButton value="#{msg['resolve.button.keep']} 2"
														 actionListener="#{resolveController.setAssignTargetId(_match.matchingMPIIdentities.toArray()[1].identity.identityId, 2)}"
														 update=":reason_dialog" process="@this"
														 oncomplete="PF('reason_dialog').show();" icon="mdi mdi-call-merge" iconPos="right" />
									</div>
								</div>
								<div class="ui-g possible-match" style="margin:0">
									<components:person_info i1="#{_match.matchingMPIIdentities.toArray()[0].identity}"
															i2="#{_match.matchingMPIIdentities.toArray()[1].identity}"
															mpi1="#{_match.matchingMPIIdentities.toArray()[0].mpiId.value}"
															mpi2="#{_match.matchingMPIIdentities.toArray()[1].mpiId.value}" />
								</div>
							</h:panelGroup>
						</p:rowExpansion>
					</p:dataTable>
					<p:commandButton id="newPossibleMatchButton" actionListener="#{resolveController.onNewPossibleMatch}"
									 icon="mdi mdi-plus" oncomplete="PF('newPossibleMatch').show();"
									 process="@this" styleClass="secondary"
									 update=":newPossibleMatch" value="#{msg['resolve.button.newPossibleMatch']}">
						<p:resetInput target=":newPossibleMatch" />
					</p:commandButton>
				</p:panel>
			</h:form>

			<p:dialog modal="true" widgetVar="reason_dialog" closeOnEscape="true" styleClass="no-title">
				<h:form id="reason_dialog"
						styleClass="#{resolveController.action.name() == 'SPLIT' ? 'unlink' : ''}
                                    #{resolveController.action.name() == 'ASSIGN' and resolveController.assignPersonNumber == 1 ? 'left' : ''}
                                    #{resolveController.action.name() == 'ASSIGN' and resolveController.assignPersonNumber == 2 ? 'right' : ''}">
					<h4>
						<h:outputText value="#{msg['resolve.button.keep']} #{resolveController.assignPersonNumber}" rendered="#{resolveController.action.name() == 'ASSIGN'}" />
						<h:outputText value="#{msg['resolve.button.split']}" rendered="#{resolveController.action.name() == 'SPLIT'}" />
					</h4>
					<h:outputLabel for="reasonOption" value="#{msg['resolve.reason']}" style="font-weight: bold; margin: 5px 0" />
					<p:selectOneRadio id="reasonOption" value="#{resolveController.selectedReason}" layout="custom">
						<f:selectItems value="#{resolveController.availableDeduplicationReasons}" />
						<p:ajax event="valueChange" update="@parent" process="@this" partialSubmit="true" />
					</p:selectOneRadio>

					<p:panelGrid columns="2" styleClass="no-border">
						<c:forEach items="#{resolveController.availableDeduplicationReasons}" var="_reason" varStatus="_i">
							<p:radioButton for="@parent:@parent:reasonOption" itemIndex="#{_i.index}" />
							<p:column rendered="#{_reason != resolveController.otherReasonOption}">
								<h:outputLabel value="#{resolveController.getDeduplicationReasonLabel(_reason)}" />
								<components:tooltip rendered="#{not empty resolveController.reasons.get(_reason).description}"
													value="#{resolveController.getDeduplicationReasonDescription(resolveController.reasons.get(_reason).description)}" />
							</p:column>
							<p:column rendered="#{_reason == resolveController.otherReasonOption}">
								<p:inputText id="otherReason_#{_i.index}" value="#{resolveController.otherReason}" />
								<p:watermark for="otherReason_#{_i.index}" value="#{msg['deduplication.OTHER_REASON_OPTION']}" />
							</p:column>
						</c:forEach>
					</p:panelGrid>

					<ui:fragment rendered="#{domainSelector.selectedDomainConfiguration.useNotifications}">
						<p:selectBooleanCheckbox value="#{resolveController.sendMergeNotification}" />
						<p:outputLabel value=" #{msg['resolve.label.sendMergeNotification']}" />
						<br />
					</ui:fragment>
					<p:commandButton action="#{resolveController.split}" onclick="PF('reason_dialog').hide(); PF('loading').show();"
									 oncomplete="PF('loading').hide();rowExpansion('matches');" icon="mdi mdi-check"
									 rendered="#{resolveController.action.name() == 'SPLIT'}"
									 value="#{msg['resolve.action.'.concat(resolveController.action)]}" update=":main" />
					<p:commandButton action="#{resolveController.assignIdentity}"
									 onclick="PF('reason_dialog').hide(); PF('loading').show();"
									 oncomplete="PF('loading').hide();rowExpansion('matches');" icon="mdi mdi-check"
									 rendered="#{resolveController.action.name() == 'ASSIGN'}"
									 value="#{msg['resolve.action.'.concat(resolveController.action)]}" update=":main" />
					<p:commandButton onclick="PF('reason_dialog').hide();" icon="mdi mdi-close" styleClass="secondary" value="#{cmsg['ui.button.cancel']}" />
				</h:form>
			</p:dialog>

			<p:dialog id="newPossibleMatch" header="#{msg['resolve.label.newPossibleMatch']}" modal="true" widgetVar="newPossibleMatch"
					  closeOnEscape="true">
				<h:form>
					<p:messages escape="false" />
					<p:panelGrid columnClasses="ui-grid-col-6,ui-grid-col-6" columns="2" layout="grid">
						<p:outputLabel for="type" value="#{msg['resolve.label.externalPossibleMatchIdType']}" />
						<p:selectOneMenu id="type" value="#{resolveController.externalPossibleMatchIdType}">
							<f:selectItems itemLabel="#{msg['resolve.label.externalPossibleMatchIdType.'.concat(_type)]}"
										   value="#{resolveController.externalPossibleMatchIdTypes}" var="_type" />
							<p:ajax event="change" update="@form" />
						</p:selectOneMenu>
						<p:outputLabel for="mpi1"
									   value="#{resolveController.externalPossibleMatchIdType eq 'MPI' ? msg['resolve.label.mpi1'] : msg['resolve.label.identityId1']}" />
						<p:inputText id="mpi1" required="true" value="#{resolveController.externalPossibleMatchId1}" />
						<p:outputLabel for="mpi2"
									   value="#{resolveController.externalPossibleMatchIdType eq 'MPI' ? msg['resolve.label.mpi2'] : msg['resolve.label.identityId2']}" />
						<p:inputText id="mpi2" required="true" value="#{resolveController.externalPossibleMatchId2}" />
					</p:panelGrid>
					<p:commandButton id="addPossibleMatchButton" actionListener="#{resolveController.onAddPossibleMatch}"
									 icon="mdi mdi-check"
									 oncomplete="rowExpansion('matches'); if (args &amp;&amp; !args.validationFailed) {PF('newPossibleMatch').hide(); updateRowCount();}"
									 update="@form, main:matches"
									 value="#{msg['common.button.add']}" />
				</h:form>
			</p:dialog>
		</ui:define>
	</ui:composition>
</h:body>
</html>
