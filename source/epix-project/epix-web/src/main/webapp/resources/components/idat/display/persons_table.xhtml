<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
		"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--
  ###license-information-start###
  E-PIX - Enterprise Patient Identifier Cross-referencing
  __
  Copyright (C) 2009 - 2023 Trusted Third Party of the University Medicine Greifswald
  							kontakt-ths@uni-greifswald.de
  
  							concept and implementation
  							l.geidel,c.schack, d.langner, g.koetzschke
  
  							web client
  							a.blumentritt, f.m. moser
  
  							docker
  							r.schuldt
  
  							privacy preserving record linkage (PPRL)
  							c.hampf
  
  							please cite our publications
  							http://dx.doi.org/10.3414/ME14-01-0133
  							http://dx.doi.org/10.1186/s12967-015-0545-6
  							https://translational-medicine.biomedcentral.com/articles/10.1186/s12967-020-02257-4
  __
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  ###license-information-end###
  -->


<html xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:composite="http://java.sun.com/jsf/composite" xmlns:f="http://java.sun.com/jsf/core"
	  xmlns:h="http://java.sun.com/jsf/html" xmlns:p="http://primefaces.org/ui">

<!-- INTERFACE -->
<composite:interface>
	<composite:attribute name="webPersonList" required="true" type="java.util.List" />
	<composite:attribute name="showIdat" default="true" required="false" type="java.lang.Boolean" />
	<composite:attribute name="showContact" default="true" required="false" type="java.lang.Boolean" />
	<composite:attribute name="showLocalIdentifiers" default="true" required="false" type="java.lang.Boolean" />
	<composite:attribute name="showStatus" default="false" required="false" type="java.lang.Boolean" />
	<composite:attribute name="actionController" required="false" />
	<composite:attribute name="actionOpenIdentity" required="false" type="java.lang.String" />
	<composite:attribute name="actionSetReferenceIdentity" required="false" type="java.lang.String" />
	<composite:attribute name="actionEditIdentity" required="false" type="java.lang.String" />
	<composite:attribute name="actionEditIdentityOnComplete" required="false" type="java.lang.String" />
	<composite:attribute name="actionEditIdentityUpdate" required="false" type="java.lang.String" />
	<composite:attribute name="actionDeleteIdentity" required="false" type="java.lang.String" />
	<composite:attribute name="actionEditContact" required="false" type="java.lang.String" />
	<composite:attribute name="actionEditContactOnComplete" required="false" type="java.lang.String" />
	<composite:attribute name="actionEditContactUpdate" required="false" type="java.lang.String" />
	<composite:attribute name="actionDeleteContact" required="false" type="java.lang.String" />
	<composite:attribute name="actionDeleteContactUpdate" required="false" type="java.lang.String" />
	<composite:attribute name="update" required="false" type="java.lang.String" />
</composite:interface>

<!-- IMPLEMENTATION -->
<composite:implementation>
	<p:importEnum type="org.emau.icmvc.ttp.epix.frontend.model.WebPersonField" var="Field" />
	<f:event listener="#{ptf.create(cc.attrs.id, cc.attrs.webPersonList)}" type="preRenderComponent" />

	<p:dataTable id="persons_list"
				 currentPageReportTemplate="{startRecord}-{endRecord} #{cmsg['ui.table.of']} {totalRecords}"
				 emptyMessage="#{cmsg['ui.table.empty']}" pageLinks="5" paginator="#{cc.attrs.webPersonList.size() > 10}"
				 paginatorPosition="bottom" paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
				 rows="10" style="white-space: nowrap;" value="#{cc.attrs.webPersonList}" var="_person">

		<!-- Match Result -->
		<p:column headerText="#{msg['common.person.matchStatus']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.matchStatus)}"
				  sortBy="#{_person.matchStatus}">
			<h:outputText value="#{_person.matchStatus}" />
		</p:column>
		<p:column headerText="#{msg['common.person.errorMsg']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.errorMsg)}"
				  sortBy="#{_person.errorMsg}">
			<h:outputText value="#{_person.errorMsg}" />
		</p:column>

		<!-- Actions -->
		<p:column headerText="#{msg['common.button.actions']}"
				  rendered="#{not empty cc.attrs.actionOpenIdentity or not empty cc.attrs.actionEditIdentity or not empty cc.attrs.actionDeleteIdentity or not empty cc.attrs.actionEditContact or not empty cc.attrs.actionDeleteContact}"
				  styleClass="icons">
			<!-- Open Identity -->
			<p:commandButton action="#{cc.attrs.actionController[cc.attrs.actionOpenIdentity](_person.mpiId)}" value="#{cmsg['ui.button.open']}"
							 icon="mdi mdi-account-details" onclick="PF('loading').show();" oncomplete="PF('loading').hide();"
							 process="@this" rendered="#{not empty cc.attrs.actionOpenIdentity}" />

			<!-- Set Reference Identity -->
			<p:commandButton action="#{cc.attrs.actionController[cc.attrs.actionSetReferenceIdentity](_person.identityId)}" disabled="#{_person.reference}"
							 title="#{msg['page.person.identity.reference.set']}"
							 icon="mdi mdi-star-circle" onclick="PF('loading').show();" oncomplete="PF('loading').hide();"
							 process="@this" rendered="#{not empty cc.attrs.actionSetReferenceIdentity}" update="persons_list, #{cc.attrs.actionEditIdentityUpdate}" styleClass="secondary" />
			<!-- Edit Identity -->
			<p:commandButton action="#{cc.attrs.actionController[cc.attrs.actionEditIdentity](_person.identityId)}" title="#{cmsg['ui.button.edit']}"
							 icon="mdi mdi-pencil" onclick="PF('loading').show();" oncomplete="PF('loading').hide();#{cc.attrs.actionEditIdentityOnComplete}"
							 process="@this" rendered="#{not empty cc.attrs.actionEditIdentity}" update="persons_list, #{cc.attrs.actionEditIdentityUpdate}" styleClass="secondary" />
			<!-- Delete Identity -->
			<p:commandButton action="#{cc.attrs.actionController[cc.attrs.actionDeleteIdentity](_person.identityId)}"
							 disabled="#{cc.attrs.webPersonList.size() == 1}"
							 title="#{cc.attrs.webPersonList.size() == 1 ? msg['page.person.identity.delete.disabled'] : cmsg['ui.button.delete']}"
							 icon="mdi mdi-delete-empty" onclick="PF('loading').show();" oncomplete="PF('loading').hide();"
							 process="@this" rendered="#{not empty cc.attrs.actionDeleteIdentity}" update="persons_list, #{cc.attrs.actionEditIdentityUpdate}" styleClass="secondary">
				<p:confirm header="#{msg['common.confirmation']}" icon="mdi mdi-delete-empty" message="#{msg['page.person.identity.delete.confirm']}" />
			</p:commandButton>

			<!-- Edit Contact -->
			<p:commandButton action="#{cc.attrs.actionController[cc.attrs.actionEditContact](_person.contact.contactId)}" title="#{cmsg['ui.button.edit']}"
							 icon="mdi mdi-pencil" onclick="PF('loading').show();" oncomplete="PF('loading').hide();#{cc.attrs.actionEditContactOnComplete}"
							 process="@this" rendered="#{not empty cc.attrs.actionEditContact}" update="persons_list, #{cc.attrs.actionEditContactUpdate}" styleClass="secondary" />
			<!-- Delete Contact -->
			<p:commandButton action="#{cc.attrs.actionController[cc.attrs.actionDeleteContact](_person.contact.contactId)}" title="#{cmsg['ui.button.delete']}"
							 icon="mdi mdi-delete-empty" onclick="PF('loading').show();" oncomplete="PF('loading').hide();"
							 process="@this" rendered="#{not empty cc.attrs.actionDeleteContact}" update="persons_list, #{cc.attrs.actionDeleteContactUpdate}" styleClass="secondary">
				<p:confirm header="#{msg['common.confirmation']}" icon="mdi mdi-delete-empty" message="#{msg['page.person.contact.delete.confirm']}" />
			</p:commandButton>
		</p:column>

		<!-- Identitiy Status-->
		<p:column rendered="#{cc.attrs.showStatus}" style="width:1px" headerText="Status">
			<h:outputText styleClass="tag tag_#{_person.tag.color} #{_person.tag.mdiIcon}" value="#{_person.tag.value}" rendered="#{not empty _person.tag}" />
		</p:column>

		<p:column headerText="#{msg['common.person.MPI']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.MPI)}"
				  sortBy="#{_person.mpiId}">
			<h:outputText value="#{_person.mpiId}" />
		</p:column>

		<!-- Local Identifiers -->
		<c:if test="#{cc.attrs.showLocalIdentifiers}">
			<c:forEach items="#{epixHelper.identifierDomainsFiltered}" var="_identifierDomain">
				<p:column headerText="#{_identifierDomain.label}" rendered="#{ptf.tables.get(cc.attrs.id).hasIdentifierDomain(_identifierDomain.name)}">
					<h:outputText value="#{_person.getValueForIdentifierDomain(_identifierDomain.name)}" />
				</p:column>
			</c:forEach>
		</c:if>

		<!-- Identitiy -->
		<c:if test="#{cc.attrs.showIdat}">
			<p:column headerText="#{msg['common.person.firstName']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.firstName)}"
					  sortBy="#{_person.firstName}">
				<h:outputText value="#{_person.firstName}" />
			</p:column>
			<p:column headerText="#{msg['common.person.middleName']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.middleName)}"
					  sortBy="#{_person.middleName}">
				<h:outputText value="#{_person.middleName}" />
			</p:column>
			<p:column headerText="#{msg['common.person.lastName']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.lastName)}"
					  sortBy="#{_person.lastName}">
				<h:outputText value="#{_person.lastName}" />
			</p:column>
			<p:column headerText="#{msg['common.person.prefix']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.prefix)}"
					  sortBy="#{_person.prefix}">
				<h:outputText value="#{_person.prefix}" />
			</p:column>
			<p:column headerText="#{msg['common.person.suffix']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.suffix)}"
					  sortBy="#{_person.suffix}">
				<h:outputText value="#{_person.suffix}" />
			</p:column>
			<p:column headerText="#{msg['common.person.gender']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.gender)}"
					  sortBy="#{msg['common.person.gender.'.concat(_person.gender.name())]}">
				<h:outputText value="#{msg['common.person.gender.'.concat(_person.gender.name())]}" />
			</p:column>
			<p:column headerText="#{msg['common.person.birthDate']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.birthDate)}"
					  sortBy='#{_person.birthDate}'>
				<h:outputText value='#{_person.birthDate}' converter="date" />
			</p:column>
			<p:column headerText="#{msg['common.person.birthPlace']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.birthPlace)}"
					  sortBy="#{_person.birthPlace}">
				<h:outputText value="#{_person.birthPlace}" />
			</p:column>
			<p:column headerText="#{msg['common.person.vitalStatus']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.vitalStatus)}"
					  sortBy="#{msg['common.person.vitalStatus.'.concat(_person.vitalStatus.name())]}">
				<h:outputText value="#{msg['common.person.vitalStatus.'.concat(_person.vitalStatus.name())]}" />
			</p:column>
			<p:column headerText="#{msg['common.person.dateOfDeath']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.dateOfDeath)}"
					  sortBy='#{_person.birthDate}'>
				<h:outputText value='#{_person.dateOfDeath}' converter="date" />
			</p:column>
			<p:column headerText="#{msg['common.person.race']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.race)}"
					  sortBy="#{_person.race}">
				<h:outputText value="#{_person.race}" />
			</p:column>
			<p:column headerText="#{msg['common.person.religion']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.religion)}"
					  sortBy="#{_person.religion}">
				<h:outputText value="#{_person.religion}" />
			</p:column>
			<p:column headerText="#{msg['common.person.mothersMaidenName']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.mothersMaidenName)}"
					  sortBy="#{_person.mothersMaidenName}">
				<h:outputText value="#{_person.mothersMaidenName}" />
			</p:column>
			<p:column headerText="#{msg['common.person.degree']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.degree)}"
					  sortBy="#{_person.degree}">
				<h:outputText value="#{_person.degree}" />
			</p:column>
			<p:column headerText="#{msg['common.person.motherTongue']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.motherTongue)}"
					  sortBy="#{_person.motherTongue}">
				<h:outputText value="#{_person.motherTongue}" />
			</p:column>
			<p:column headerText="#{msg['common.person.nationality']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.nationality)}"
					  sortBy="#{_person.nationality}">
				<h:outputText value="#{_person.nationality}" />
			</p:column>
			<p:column headerText="#{msg['common.person.civilStatus']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.civilStatus)}"
					  sortBy="#{_person.civilStatus}">
				<h:outputText value="#{_person.civilStatus}" />
			</p:column>
			<p:column headerText="#{msg['common.person.externalDate']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.externalDate)}"
					  sortBy='#{_person.externalDate}'>
				<h:outputText value='#{_person.externalDate}' converter="date" />
			</p:column>
			<p:column headerText="#{epixHelper.getValueFieldLabel('value1')}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.value1)}"
					  sortBy="#{_person.value1}">
				<h:outputText value="#{_person.value1}" />
			</p:column>
			<p:column headerText="#{epixHelper.getValueFieldLabel('value2')}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.value2)}"
					  sortBy="#{_person.value2}">
				<h:outputText value="#{_person.value2}" />
			</p:column>
			<p:column headerText="#{epixHelper.getValueFieldLabel('value3')}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.value3)}"
					  sortBy="#{_person.value3}">
				<h:outputText value="#{_person.value3}" />
			</p:column>
			<p:column headerText="#{epixHelper.getValueFieldLabel('value4')}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.value4)}"
					  sortBy="#{_person.value4}">
				<h:outputText value="#{_person.value4}" />
			</p:column>
			<p:column headerText="#{epixHelper.getValueFieldLabel('value5')}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.value5)}"
					  sortBy="#{_person.value5}">
				<h:outputText value="#{_person.value5}" />
			</p:column>
			<p:column headerText="#{epixHelper.getValueFieldLabel('value6')}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.value6)}"
					  sortBy="#{_person.value6}">
				<h:outputText id="value6" value="#{webUtil.cut(_person.value6, 50, ' [...]')}" />
				<p:tooltip for="value6" value="#{_person.value6}" rendered="#{not empty _person.value6 and _person.value6.length() > 50}" />
			</p:column>
			<p:column headerText="#{epixHelper.getValueFieldLabel('value7')}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.value7)}"
					  sortBy="#{_person.value7}">
				<h:outputText id="value7" value="#{webUtil.cut(_person.value7, 50, ' [...]')}" />
				<p:tooltip for="value7" value="#{_person.value7}" rendered="#{not empty _person.value7 and _person.value7.length() > 50}" />
			</p:column>
			<p:column headerText="#{epixHelper.getValueFieldLabel('value8')}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.value8)}"
					  sortBy="#{_person.value8}">
				<h:outputText id="value8" value="#{webUtil.cut(_person.value8, 50, ' [...]')}" />
				<p:tooltip for="value8" value="#{_person.value8}" rendered="#{not empty _person.value8 and _person.value8.length() > 50}" />
			</p:column>
			<p:column headerText="#{epixHelper.getValueFieldLabel('value9')}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.value9)}"
					  sortBy="#{_person.value9}">
				<h:outputText id="value9" value="#{webUtil.cut(_person.value9, 50, ' [...]')}" />
				<p:tooltip for="value9" value="#{_person.value9}" rendered="#{not empty _person.value9 and _person.value9.length() > 50}" />
			</p:column>
			<p:column headerText="#{epixHelper.getValueFieldLabel('value10')}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.value10)}"
					  sortBy="#{_person.value10}">
				<h:outputText id="value10" value="#{webUtil.cut(_person.value10, 50, ' [...]')}" />
				<p:tooltip for="value10" value="#{_person.value10}" rendered="#{not empty _person.value10 and _person.value10.length() > 50}" />
			</p:column>
			<p:column headerText="#{msg['common.person.created']}" sortBy="#{_person.created}">
				<h:outputText value='#{_person.created}' converter="datetime" />
			</p:column>
			<p:column headerText="#{msg['common.person.lastEdited']}" sortBy="#{_person.lastEdited}">
				<h:outputText value='#{_person.lastEdited}' converter="datetime" />
			</p:column>
		</c:if>

		<!-- Contact -->
		<c:if test="#{cc.attrs.showContact}">
			<p:column headerText="#{msg['common.person.street']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.street)}"
					  sortBy="#{_person.contact.street}">
				<h:outputText value="#{_person.contact.street}" />
			</p:column>
			<p:column headerText="#{msg['common.person.zipCode']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.zipCode)}"
					  sortBy="#{_person.contact.zipCode}">
				<h:outputText value="#{_person.contact.zipCode}" />
			</p:column>
			<p:column headerText="#{msg['common.person.city']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.city)}"
					  sortBy="#{_person.contact.city}">
				<h:outputText value="#{_person.contact.city}" />
			</p:column>
			<p:column headerText="#{msg['common.person.state']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.state)}"
					  sortBy="#{_person.contact.state}">
				<h:outputText value="#{_person.contact.state}" />
			</p:column>
			<p:column headerText="#{msg['common.person.country']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.country)}"
					  sortBy="#{_person.contact.country}">
				<h:outputText value="#{_person.contact.country}" />
			</p:column>
			<p:column headerText="#{msg['common.person.countryCode']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.countryCode)}"
					  sortBy="#{_person.contact.countryCode}">
				<h:outputText value="#{_person.contact.countryCode}" />
			</p:column>
			<p:column headerText="#{msg['common.person.email']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.email)}"
					  sortBy="#{_person.contact.email}">
				<h:outputText value="#{_person.contact.email}" />
			</p:column>
			<p:column headerText="#{msg['common.person.phone']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.phone)}"
					  sortBy="#{_person.contact.phone}">
				<h:outputText value="#{_person.contact.phone}" />
			</p:column>
			<p:column headerText="#{msg['common.person.district']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.district)}"
					  sortBy="#{_person.contact.district}">
				<h:outputText value="#{_person.contact.district}" />
			</p:column>
			<p:column headerText="#{msg['common.person.municipalityKey']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.municipalityKey)}"
					  sortBy="#{_person.contact.municipalityKey}">
				<h:outputText value="#{_person.contact.municipalityKey}" />
			</p:column>
			<p:column headerText="#{msg['common.person.contactExternalDate']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.contactExternalDate)}"
					  sortBy='#{_person.contact.externalDate}'>
				<h:outputText value='#{_person.contact.externalDate}' converter="date" />
			</p:column>
			<p:column headerText="#{msg['common.person.dateOfMoveIn']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.dateOfMoveIn)}"
					  sortBy='#{_person.contact.dateOfMoveIn}'>
				<h:outputText value='#{_person.contact.dateOfMoveIn}' converter="date" />
			</p:column>
			<p:column headerText="#{msg['common.person.dateOfMoveOut']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.dateOfMoveOut)}"
					  sortBy='#{_person.contact.dateOfMoveOut}'>
				<h:outputText value='#{_person.contact.dateOfMoveOut}' converter="date" />
			</p:column>
			<p:column headerText="#{msg['common.person.lastEdited']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.dateOfMoveOut)}"
					  sortBy='#{_person.contact.dateOfMoveOut}'>
				<h:outputText value='#{_person.contact.contactCreated}' converter="date" />
			</p:column>
			<p:column headerText="#{msg['common.person.created']}" rendered="#{ptf.tables.get(cc.attrs.id).hasField(Field.dateOfMoveOut)}"
					  sortBy='#{_person.contact.dateOfMoveOut}'>
				<h:outputText value='#{_person.contact.contactLastEdited}' converter="date" />
			</p:column>
		</c:if>
	</p:dataTable>
</composite:implementation>

</html>
